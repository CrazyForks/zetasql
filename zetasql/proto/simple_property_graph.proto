//
// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto2";

package zetasql;

import "zetasql/public/type.proto";

option java_package = "com.google.zetasql";
option java_outer_classname = "SimplePropertyGraphProtos";

message SimplePropertyGraphProto {
  // DEPRECATED: use name_path instead.
  optional string name = 1;
  repeated string name_path = 2;
  repeated SimpleGraphElementTableProto node_tables = 3;
  repeated SimpleGraphElementTableProto edge_tables = 4;
  repeated SimpleGraphElementLabelProto labels = 5;
  repeated SimpleGraphPropertyDeclarationProto property_declarations = 6;
}

message SimpleGraphElementTableProto {
  enum Kind {
    KIND_UNSPECIFIED = 0;
    NODE = 1;
    EDGE = 2;
  }
  optional string name = 1;
  repeated string property_graph_name_path = 2;
  optional Kind kind = 3;
  optional string input_table_name = 4;
  repeated int32 key_columns = 5 [packed = true];
  repeated string label_names = 6;
  repeated SimpleGraphPropertyDefinitionProto property_definitions = 7;

  optional SimpleGraphNodeTableReferenceProto source_node_table = 8;
  optional SimpleGraphNodeTableReferenceProto dest_node_table = 9;
}

message SimpleGraphElementLabelProto {
  optional string name = 1;
  repeated string property_graph_name_path = 2;
  repeated string property_declaration_names = 3;
}

message SimpleGraphNodeTableReferenceProto {
  optional string node_table_name = 1;
  repeated int32 edge_table_columns = 2 [packed = true];
  repeated int32 node_table_columns = 3 [packed = true];
}

message SimpleGraphPropertyDeclarationProto {
  optional string name = 1;
  repeated string property_graph_name_path = 2;
  optional TypeProto type = 3;
}

message SimpleGraphPropertyDefinitionProto {
  optional string property_declaration_name = 1;
  optional string value_expression_sql = 2;
}

[default language_features=ANNOTATION_FRAMEWORK,TIMESTAMP_PRECISION,TIMESTAMP_PRECISION_ANNOTATION,TIMESTAMP_NANOS,TIMESTAMP_PICOS,MAP_TYPE,COLLATION_SUPPORT,UNNEST_AND_FLATTEN_ARRAYS,PARAMETERIZED_TYPES,CAST_DIFFERENT_ARRAY_TYPES]

# Select columns from table with timestamp precisions.
SELECT *
FROM TimestampPrecisionTable
--
QueryStmt
+-output_column_list=
| +-TimestampPrecisionTable.timestamp_12#1{TimestampPrecision:12} AS timestamp_12 [TIMESTAMP]
| +-TimestampPrecisionTable.timestamp_9#2{TimestampPrecision:9} AS timestamp_9 [TIMESTAMP]
| +-TimestampPrecisionTable.timestamp_6#3{TimestampPrecision:6} AS timestamp_6 [TIMESTAMP]
| +-TimestampPrecisionTable.timestamp_3#4{TimestampPrecision:3} AS timestamp_3 [TIMESTAMP]
| +-TimestampPrecisionTable.timestamp_unannotated#5 AS timestamp_unannotated [TIMESTAMP]
| +-TimestampPrecisionTable.arr_timestamp_3#6<{TimestampPrecision:3}> AS arr_timestamp_3 [ARRAY<TIMESTAMP>]
| +-TimestampPrecisionTable.struct_timestamp_3_12#7<{TimestampPrecision:3},{TimestampPrecision:12}> AS struct_timestamp_3_12 [STRUCT<ts_field_3 TIMESTAMP, ts_field_12 TIMESTAMP>]
+-query=
  +-ProjectScan
    +-column_list=TimestampPrecisionTable.[timestamp_12#1, timestamp_9#2, timestamp_6#3, timestamp_3#4, timestamp_unannotated#5, arr_timestamp_3#6, struct_timestamp_3_12#7]
    +-input_scan=
      +-TableScan(column_list=TimestampPrecisionTable.[timestamp_12#1, timestamp_9#2, timestamp_6#3, timestamp_3#4, timestamp_unannotated#5, arr_timestamp_3#6, struct_timestamp_3_12#7], table=TimestampPrecisionTable, column_index_list=[0, 1, 2, 3, 4, 5, 6])
==

# Test propagation from CAST to timestamp with precision, input is untyped NULL.
SELECT CAST(NULL
            AS TIMESTAMP{{|(3)|(12)}})
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 := Literal(type=TIMESTAMP, value=NULL, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
==

# Test propagation from CAST to ARRAY of timestamp with precision, input is
# untyped NULL or untyped empty ARRAY
SELECT CAST({{NULL|[]}}
            AS ARRAY<TIMESTAMP{{|(3)|(12)}}>)
--
ALTERNATION GROUPS:
    NULL,
    NULL,(3)
    NULL,(12)
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [ARRAY<TIMESTAMP>]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 := Literal(type=ARRAY<TIMESTAMP>, value=NULL, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
--
ALTERNATION GROUPS:
    [],
    [],(3)
    [],(12)
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [ARRAY<TIMESTAMP>]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 := Literal(type=ARRAY<TIMESTAMP>, value=[], has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
==

# Test propagation when casting from one precision to same or another. Also test
# casting from unannotated input to a target precision.
SELECT CAST(timestamp_{{unannotated|3|9|12}} AS TIMESTAMP({{3|9|12}}))
FROM TimestampPrecisionTable
--
ALTERNATION GROUP: unannotated,3
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8{TimestampPrecision:3} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8{TimestampPrecision:3}]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(TIMESTAMP -> TIMESTAMP)
    |     +-type_annotation_map={TimestampPrecision:3}
    |     +-ColumnRef(type=TIMESTAMP, type_annotation_map={TimestampPrecision:12}, column=TimestampPrecisionTable.timestamp_unannotated#5)
    |     +-type_modifiers=type_parameters:(precision=3)
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_unannotated#5], table=TimestampPrecisionTable, column_index_list=[4])
--
ALTERNATION GROUP: unannotated,9
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8{TimestampPrecision:9} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8{TimestampPrecision:9}]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(TIMESTAMP -> TIMESTAMP)
    |     +-type_annotation_map={TimestampPrecision:9}
    |     +-ColumnRef(type=TIMESTAMP, type_annotation_map={TimestampPrecision:12}, column=TimestampPrecisionTable.timestamp_unannotated#5)
    |     +-type_modifiers=type_parameters:(precision=9)
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_unannotated#5], table=TimestampPrecisionTable, column_index_list=[4])
--
ALTERNATION GROUP: unannotated,12
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8{TimestampPrecision:12} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8{TimestampPrecision:12}]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(TIMESTAMP -> TIMESTAMP)
    |     +-type_annotation_map={TimestampPrecision:12}
    |     +-ColumnRef(type=TIMESTAMP, type_annotation_map={TimestampPrecision:12}, column=TimestampPrecisionTable.timestamp_unannotated#5)
    |     +-type_modifiers=type_parameters:(precision=12)
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_unannotated#5], table=TimestampPrecisionTable, column_index_list=[4])
--
ALTERNATION GROUP: 3,3
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8{TimestampPrecision:3} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8{TimestampPrecision:3}]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(TIMESTAMP -> TIMESTAMP)
    |     +-type_annotation_map={TimestampPrecision:3}
    |     +-ColumnRef(type=TIMESTAMP, type_annotation_map={TimestampPrecision:3}, column=TimestampPrecisionTable.timestamp_3#4{TimestampPrecision:3})
    |     +-type_modifiers=type_parameters:(precision=3)
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_3#4{TimestampPrecision:3}], table=TimestampPrecisionTable, column_index_list=[3])
--
ALTERNATION GROUP: 3,9
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8{TimestampPrecision:9} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8{TimestampPrecision:9}]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(TIMESTAMP -> TIMESTAMP)
    |     +-type_annotation_map={TimestampPrecision:9}
    |     +-ColumnRef(type=TIMESTAMP, type_annotation_map={TimestampPrecision:3}, column=TimestampPrecisionTable.timestamp_3#4{TimestampPrecision:3})
    |     +-type_modifiers=type_parameters:(precision=9)
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_3#4{TimestampPrecision:3}], table=TimestampPrecisionTable, column_index_list=[3])
--
ALTERNATION GROUP: 3,12
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8{TimestampPrecision:12} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8{TimestampPrecision:12}]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(TIMESTAMP -> TIMESTAMP)
    |     +-type_annotation_map={TimestampPrecision:12}
    |     +-ColumnRef(type=TIMESTAMP, type_annotation_map={TimestampPrecision:3}, column=TimestampPrecisionTable.timestamp_3#4{TimestampPrecision:3})
    |     +-type_modifiers=type_parameters:(precision=12)
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_3#4{TimestampPrecision:3}], table=TimestampPrecisionTable, column_index_list=[3])
--
ALTERNATION GROUP: 9,3
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8{TimestampPrecision:3} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8{TimestampPrecision:3}]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(TIMESTAMP -> TIMESTAMP)
    |     +-type_annotation_map={TimestampPrecision:3}
    |     +-ColumnRef(type=TIMESTAMP, type_annotation_map={TimestampPrecision:9}, column=TimestampPrecisionTable.timestamp_9#2{TimestampPrecision:9})
    |     +-type_modifiers=type_parameters:(precision=3)
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_9#2{TimestampPrecision:9}], table=TimestampPrecisionTable, column_index_list=[1])
--
ALTERNATION GROUP: 9,9
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8{TimestampPrecision:9} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8{TimestampPrecision:9}]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(TIMESTAMP -> TIMESTAMP)
    |     +-type_annotation_map={TimestampPrecision:9}
    |     +-ColumnRef(type=TIMESTAMP, type_annotation_map={TimestampPrecision:9}, column=TimestampPrecisionTable.timestamp_9#2{TimestampPrecision:9})
    |     +-type_modifiers=type_parameters:(precision=9)
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_9#2{TimestampPrecision:9}], table=TimestampPrecisionTable, column_index_list=[1])
--
ALTERNATION GROUP: 9,12
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8{TimestampPrecision:12} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8{TimestampPrecision:12}]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(TIMESTAMP -> TIMESTAMP)
    |     +-type_annotation_map={TimestampPrecision:12}
    |     +-ColumnRef(type=TIMESTAMP, type_annotation_map={TimestampPrecision:9}, column=TimestampPrecisionTable.timestamp_9#2{TimestampPrecision:9})
    |     +-type_modifiers=type_parameters:(precision=12)
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_9#2{TimestampPrecision:9}], table=TimestampPrecisionTable, column_index_list=[1])
--
ALTERNATION GROUP: 12,3
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8{TimestampPrecision:3} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8{TimestampPrecision:3}]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(TIMESTAMP -> TIMESTAMP)
    |     +-type_annotation_map={TimestampPrecision:3}
    |     +-ColumnRef(type=TIMESTAMP, type_annotation_map={TimestampPrecision:12}, column=TimestampPrecisionTable.timestamp_12#1{TimestampPrecision:12})
    |     +-type_modifiers=type_parameters:(precision=3)
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_12#1{TimestampPrecision:12}], table=TimestampPrecisionTable, column_index_list=[0])
--
ALTERNATION GROUP: 12,9
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8{TimestampPrecision:9} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8{TimestampPrecision:9}]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(TIMESTAMP -> TIMESTAMP)
    |     +-type_annotation_map={TimestampPrecision:9}
    |     +-ColumnRef(type=TIMESTAMP, type_annotation_map={TimestampPrecision:12}, column=TimestampPrecisionTable.timestamp_12#1{TimestampPrecision:12})
    |     +-type_modifiers=type_parameters:(precision=9)
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_12#1{TimestampPrecision:12}], table=TimestampPrecisionTable, column_index_list=[0])
--
ALTERNATION GROUP: 12,12
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8{TimestampPrecision:12} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8{TimestampPrecision:12}]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(TIMESTAMP -> TIMESTAMP)
    |     +-type_annotation_map={TimestampPrecision:12}
    |     +-ColumnRef(type=TIMESTAMP, type_annotation_map={TimestampPrecision:12}, column=TimestampPrecisionTable.timestamp_12#1{TimestampPrecision:12})
    |     +-type_modifiers=type_parameters:(precision=12)
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_12#1{TimestampPrecision:12}], table=TimestampPrecisionTable, column_index_list=[0])
==

# Test propagation when casting to unannotated.
SELECT CAST(timestamp_{{unannotated|3|9|12}} AS TIMESTAMP)
FROM TimestampPrecisionTable
--
ALTERNATION GROUP: unannotated
--
QueryStmt
+-output_column_list=
| +-TimestampPrecisionTable.timestamp_unannotated#5 AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[TimestampPrecisionTable.timestamp_unannotated#5]
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_unannotated#5], table=TimestampPrecisionTable, column_index_list=[4])
--
ALTERNATION GROUP: 3
--
QueryStmt
+-output_column_list=
| +-TimestampPrecisionTable.timestamp_3#4{TimestampPrecision:3} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[TimestampPrecisionTable.timestamp_3#4{TimestampPrecision:3}]
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_3#4{TimestampPrecision:3}], table=TimestampPrecisionTable, column_index_list=[3])
--
ALTERNATION GROUP: 9
--
QueryStmt
+-output_column_list=
| +-TimestampPrecisionTable.timestamp_9#2{TimestampPrecision:9} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[TimestampPrecisionTable.timestamp_9#2{TimestampPrecision:9}]
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_9#2{TimestampPrecision:9}], table=TimestampPrecisionTable, column_index_list=[1])
--
ALTERNATION GROUP: 12
--
QueryStmt
+-output_column_list=
| +-TimestampPrecisionTable.timestamp_12#1{TimestampPrecision:12} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[TimestampPrecisionTable.timestamp_12#1{TimestampPrecision:12}]
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.timestamp_12#1{TimestampPrecision:12}], table=TimestampPrecisionTable, column_index_list=[0])
==

# Test with arrays to an explicit precision.
SELECT CAST(arr_timestamp_3 AS ARRAY<TIMESTAMP({{3|12}})>)
FROM TimestampPrecisionTable
--

ALTERNATION GROUP: 3
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8<{TimestampPrecision:3}> AS `$col1` [ARRAY<TIMESTAMP>]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8<{TimestampPrecision:3}>]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(ARRAY<TIMESTAMP> -> ARRAY<TIMESTAMP>)
    |     +-type_annotation_map=<{TimestampPrecision:3}>
    |     +-ColumnRef(type=ARRAY<TIMESTAMP>, type_annotation_map=<{TimestampPrecision:3}>, column=TimestampPrecisionTable.arr_timestamp_3#6<{TimestampPrecision:3}>)
    |     +-type_modifiers=type_parameters:[(precision=3)]
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.arr_timestamp_3#6<{TimestampPrecision:3}>], table=TimestampPrecisionTable, column_index_list=[5])
--
ALTERNATION GROUP: 12
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8<{TimestampPrecision:12}> AS `$col1` [ARRAY<TIMESTAMP>]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8<{TimestampPrecision:12}>]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(ARRAY<TIMESTAMP> -> ARRAY<TIMESTAMP>)
    |     +-type_annotation_map=<{TimestampPrecision:12}>
    |     +-ColumnRef(type=ARRAY<TIMESTAMP>, type_annotation_map=<{TimestampPrecision:3}>, column=TimestampPrecisionTable.arr_timestamp_3#6<{TimestampPrecision:3}>)
    |     +-type_modifiers=type_parameters:[(precision=12)]
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.arr_timestamp_3#6<{TimestampPrecision:3}>], table=TimestampPrecisionTable, column_index_list=[5])
==

# Test with arrays to unannotated precision.
SELECT CAST(arr_timestamp_3 AS ARRAY<TIMESTAMP>)
FROM TimestampPrecisionTable
--

QueryStmt
+-output_column_list=
| +-TimestampPrecisionTable.arr_timestamp_3#6<{TimestampPrecision:3}> AS `$col1` [ARRAY<TIMESTAMP>]
+-query=
  +-ProjectScan
    +-column_list=[TimestampPrecisionTable.arr_timestamp_3#6<{TimestampPrecision:3}>]
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.arr_timestamp_3#6<{TimestampPrecision:3}>], table=TimestampPrecisionTable, column_index_list=[5])
==

# Test with structs to explicit precisions.
SELECT CAST(struct_timestamp_3_12 AS STRUCT<TIMESTAMP(12), TIMESTAMP(3)>)
FROM TimestampPrecisionTable
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8<{TimestampPrecision:12},{TimestampPrecision:3}> AS `$col1` [STRUCT<TIMESTAMP, TIMESTAMP>]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8<{TimestampPrecision:12},{TimestampPrecision:3}>]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(STRUCT<ts_field_3 TIMESTAMP, ts_field_12 TIMESTAMP> -> STRUCT<TIMESTAMP, TIMESTAMP>)
    |     +-type_annotation_map=<{TimestampPrecision:12},{TimestampPrecision:3}>
    |     +-ColumnRef(type=STRUCT<ts_field_3 TIMESTAMP, ts_field_12 TIMESTAMP>, type_annotation_map=<{TimestampPrecision:3},{TimestampPrecision:12}>, column=TimestampPrecisionTable.struct_timestamp_3_12#7<{TimestampPrecision:3},{TimestampPrecision:12}>)
    |     +-type_modifiers=type_parameters:[(precision=12),(precision=3)]
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.struct_timestamp_3_12#7<{TimestampPrecision:3},{TimestampPrecision:12}>], table=TimestampPrecisionTable, column_index_list=[6])
==

# Test with structs to unspecified (both partially and fully).
SELECT CAST(struct_timestamp_3_12 AS STRUCT<TIMESTAMP{{|(6)}}, TIMESTAMP{{|(3)}}>)
FROM TimestampPrecisionTable
--

ALTERNATION GROUP: <empty>
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8 AS `$col1` [STRUCT<TIMESTAMP, TIMESTAMP>]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(STRUCT<ts_field_3 TIMESTAMP, ts_field_12 TIMESTAMP> -> STRUCT<TIMESTAMP, TIMESTAMP>)
    |     +-ColumnRef(type=STRUCT<ts_field_3 TIMESTAMP, ts_field_12 TIMESTAMP>, type_annotation_map=<{TimestampPrecision:3},{TimestampPrecision:12}>, column=TimestampPrecisionTable.struct_timestamp_3_12#7<{TimestampPrecision:3},{TimestampPrecision:12}>)
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.struct_timestamp_3_12#7<{TimestampPrecision:3},{TimestampPrecision:12}>], table=TimestampPrecisionTable, column_index_list=[6])
--
ALTERNATION GROUP: (3)
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8<{TimestampPrecision:3},{TimestampPrecision:3}> AS `$col1` [STRUCT<TIMESTAMP, TIMESTAMP>]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8<{TimestampPrecision:3},{TimestampPrecision:3}>]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(STRUCT<ts_field_3 TIMESTAMP, ts_field_12 TIMESTAMP> -> STRUCT<TIMESTAMP, TIMESTAMP>)
    |     +-type_annotation_map=<{TimestampPrecision:3},{TimestampPrecision:3}>
    |     +-ColumnRef(type=STRUCT<ts_field_3 TIMESTAMP, ts_field_12 TIMESTAMP>, type_annotation_map=<{TimestampPrecision:3},{TimestampPrecision:12}>, column=TimestampPrecisionTable.struct_timestamp_3_12#7<{TimestampPrecision:3},{TimestampPrecision:12}>)
    |     +-type_modifiers=type_parameters:[null,(precision=3)]
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.struct_timestamp_3_12#7<{TimestampPrecision:3},{TimestampPrecision:12}>], table=TimestampPrecisionTable, column_index_list=[6])
--
ALTERNATION GROUP: (6),
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8<{TimestampPrecision:6},{TimestampPrecision:12}> AS `$col1` [STRUCT<TIMESTAMP, TIMESTAMP>]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8<{TimestampPrecision:6},{TimestampPrecision:12}>]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(STRUCT<ts_field_3 TIMESTAMP, ts_field_12 TIMESTAMP> -> STRUCT<TIMESTAMP, TIMESTAMP>)
    |     +-type_annotation_map=<{TimestampPrecision:6},{TimestampPrecision:12}>
    |     +-ColumnRef(type=STRUCT<ts_field_3 TIMESTAMP, ts_field_12 TIMESTAMP>, type_annotation_map=<{TimestampPrecision:3},{TimestampPrecision:12}>, column=TimestampPrecisionTable.struct_timestamp_3_12#7<{TimestampPrecision:3},{TimestampPrecision:12}>)
    |     +-type_modifiers=type_parameters:[(precision=6),null]
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.struct_timestamp_3_12#7<{TimestampPrecision:3},{TimestampPrecision:12}>], table=TimestampPrecisionTable, column_index_list=[6])
--
ALTERNATION GROUP: (6),(3)
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8<{TimestampPrecision:6},{TimestampPrecision:3}> AS `$col1` [STRUCT<TIMESTAMP, TIMESTAMP>]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8<{TimestampPrecision:6},{TimestampPrecision:3}>]
    +-expr_list=
    | +-$col1#8 :=
    |   +-Cast(STRUCT<ts_field_3 TIMESTAMP, ts_field_12 TIMESTAMP> -> STRUCT<TIMESTAMP, TIMESTAMP>)
    |     +-type_annotation_map=<{TimestampPrecision:6},{TimestampPrecision:3}>
    |     +-ColumnRef(type=STRUCT<ts_field_3 TIMESTAMP, ts_field_12 TIMESTAMP>, type_annotation_map=<{TimestampPrecision:3},{TimestampPrecision:12}>, column=TimestampPrecisionTable.struct_timestamp_3_12#7<{TimestampPrecision:3},{TimestampPrecision:12}>)
    |     +-type_modifiers=type_parameters:[(precision=6),(precision=3)]
    +-input_scan=
      +-TableScan(column_list=[TimestampPrecisionTable.struct_timestamp_3_12#7<{TimestampPrecision:3},{TimestampPrecision:12}>], table=TimestampPrecisionTable, column_index_list=[6])
==

# When the target precision is unspecified and there's no input precision like
# when the input is from a completely unrelated type, the default precision is
# assigned.
SELECT CAST('abc' AS TIMESTAMP)
--

QueryStmt
+-output_column_list=
| +-$query.$col1#1{TimestampPrecision:12} AS `$col1` [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1{TimestampPrecision:12}]
    +-expr_list=
    | +-$col1#1 :=
    |   +-Cast(STRING -> TIMESTAMP)
    |     +-type_annotation_map={TimestampPrecision:12}
    |     +-Literal(type=STRING, value="abc")
    +-input_scan=
      +-SingleRowScan
==

# Same, but with arrays and structs.
# We should add all other container types too (MAP, GRAPH, etc.)
SELECT
  CAST([str] AS ARRAY<TIMESTAMP>),
  CAST((str, [str, str]) AS STRUCT<TIMESTAMP, ARRAY<TIMESTAMP>>)
FROM (SELECT CAST(rand() AS STRING) AS str)
--

QueryStmt
+-output_column_list=
| +-$query.$col1#2<{TimestampPrecision:12}> AS `$col1` [ARRAY<TIMESTAMP>]
| +-$query.$col2#3<{TimestampPrecision:12},<{TimestampPrecision:12}>> AS `$col2` [STRUCT<TIMESTAMP, ARRAY<TIMESTAMP>>]
+-query=
  +-ProjectScan
    +-column_list=$query.[$col1#2, $col2#3]
    +-expr_list=
    | +-$col1#2 :=
    | | +-Cast(ARRAY<STRING> -> ARRAY<TIMESTAMP>)
    | |   +-type_annotation_map=<{TimestampPrecision:12}>
    | |   +-FunctionCall(ZetaSQL:$make_array(repeated(1) STRING) -> ARRAY<STRING>)
    | |     +-ColumnRef(type=STRING, column=$subquery1.str#1)
    | +-$col2#3 :=
    |   +-MakeStruct
    |     +-type=STRUCT<TIMESTAMP, ARRAY<TIMESTAMP>>
    |     +-type_annotation_map=<{TimestampPrecision:12},<{TimestampPrecision:12}>>
    |     +-field_list=
    |       +-Cast(STRING -> TIMESTAMP)
    |       | +-type_annotation_map={TimestampPrecision:12}
    |       | +-ColumnRef(type=STRING, column=$subquery1.str#1)
    |       +-Cast(ARRAY<STRING> -> ARRAY<TIMESTAMP>)
    |         +-type_annotation_map=<{TimestampPrecision:12}>
    |         +-FunctionCall(ZetaSQL:$make_array(repeated(2) STRING) -> ARRAY<STRING>)
    |           +-ColumnRef(type=STRING, column=$subquery1.str#1)
    |           +-ColumnRef(type=STRING, column=$subquery1.str#1)
    +-input_scan=
      +-ProjectScan
        +-column_list=[$subquery1.str#1]
        +-expr_list=
        | +-str#1 :=
        |   +-Cast(DOUBLE -> STRING)
        |     +-FunctionCall(ZetaSQL:rand() -> DOUBLE)
        +-input_scan=
          +-SingleRowScan
==

# Does not propagate the annotation for other types.
SELECT CAST(1 AS STRING)
FROM TimestampPrecisionTable
--
QueryStmt
+-output_column_list=
| +-$query.$col1#8 AS `$col1` [STRING]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#8]
    +-expr_list=
    | +-$col1#8 := Literal(type=STRING, value="1", has_explicit_type=TRUE)
    +-input_scan=
      +-TableScan(table=TimestampPrecisionTable)
==

# Timestamp literal with precision annotations.
[language_features=ANNOTATION_FRAMEWORK,TIMESTAMP_PRECISION,TIMESTAMP_PRECISION_ANNOTATION,PARAMETERIZED_TYPES{{|,TIMESTAMP_NANOS|,TIMESTAMP_NANOS,TIMESTAMP_PICOS}}]
SELECT
  TIMESTAMP '2123-01-02 04:05:06+00' AS t0,
  TIMESTAMP '2123-01-02 04:05:06.123+00' AS t3,
  TIMESTAMP '2123-01-02 04:05:06.12345+00' AS t6,
  TIMESTAMP '2123-01-02 04:05:06.12345678+00' AS t9,
  TIMESTAMP '2123-01-02 04:05:06.123456789123+00' AS t12
--
ALTERNATION GROUP: <empty>
--
ERROR: Invalid TIMESTAMP literal [at 5:3]
  TIMESTAMP '2123-01-02 04:05:06.12345678+00' AS t9,
  ^
--
ALTERNATION GROUP: ,TIMESTAMP_NANOS
--
ERROR: Invalid TIMESTAMP literal [at 6:3]
  TIMESTAMP '2123-01-02 04:05:06.123456789123+00' AS t12
  ^
--
ALTERNATION GROUP: ,TIMESTAMP_NANOS,TIMESTAMP_PICOS
--
QueryStmt
+-output_column_list=
| +-$query.t0#1{TimestampPrecision:0} AS t0 [TIMESTAMP]
| +-$query.t3#2{TimestampPrecision:3} AS t3 [TIMESTAMP]
| +-$query.t6#3{TimestampPrecision:6} AS t6 [TIMESTAMP]
| +-$query.t9#4{TimestampPrecision:9} AS t9 [TIMESTAMP]
| +-$query.t12#5{TimestampPrecision:12} AS t12 [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=$query.[t0#1, t3#2, t6#3, t9#4, t12#5]
    +-expr_list=
    | +-t0#1 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:0}, value=2123-01-02 04:05:06+00, has_explicit_type=TRUE)
    | +-t3#2 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:3}, value=2123-01-02 04:05:06.123+00, has_explicit_type=TRUE)
    | +-t6#3 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:6}, value=2123-01-02 04:05:06.123450+00, has_explicit_type=TRUE)
    | +-t9#4 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:9}, value=2123-01-02 04:05:06.123456780+00, has_explicit_type=TRUE)
    | +-t12#5 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:12}, value=2123-01-02 04:05:06.123456789123+00, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
==

[show_sqlbuilder_output]

# Timestamp literal precision with trailing zeros.
SELECT
  TIMESTAMP '2123-01-02 04:05:06+00' AS t0,
  TIMESTAMP '2123-01-02 04:05:06.000+00' AS t3,
  TIMESTAMP '2123-01-02 04:05:06.123000+00' AS t6,
  TIMESTAMP '2123-01-02 04:05:06.00000000+00' AS t9,
  TIMESTAMP '2123-01-02 04:05:06.123456000000+00' AS t12
--
QueryStmt
+-output_column_list=
| +-$query.t0#1{TimestampPrecision:0} AS t0 [TIMESTAMP]
| +-$query.t3#2{TimestampPrecision:3} AS t3 [TIMESTAMP]
| +-$query.t6#3{TimestampPrecision:6} AS t6 [TIMESTAMP]
| +-$query.t9#4{TimestampPrecision:9} AS t9 [TIMESTAMP]
| +-$query.t12#5{TimestampPrecision:12} AS t12 [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=$query.[t0#1, t3#2, t6#3, t9#4, t12#5]
    +-expr_list=
    | +-t0#1 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:0}, value=2123-01-02 04:05:06+00, has_explicit_type=TRUE)
    | +-t3#2 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:3}, value=2123-01-02 04:05:06+00, has_explicit_type=TRUE)
    | +-t6#3 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:6}, value=2123-01-02 04:05:06.123+00, has_explicit_type=TRUE)
    | +-t9#4 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:9}, value=2123-01-02 04:05:06+00, has_explicit_type=TRUE)
    | +-t12#5 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:12}, value=2123-01-02 04:05:06.123456+00, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan

[SQLBUILDER_TARGET_SYNTAX_MODE standard]
[SQLBUILDER_OUTPUT]
SELECT
  CAST(TIMESTAMP "2123-01-02 04:05:06+00" AS TIMESTAMP(0)) AS t0,
  CAST(TIMESTAMP "2123-01-02 04:05:06+00" AS TIMESTAMP(3)) AS t3,
  CAST(TIMESTAMP "2123-01-02 04:05:06.123+00" AS TIMESTAMP(6)) AS t6,
  CAST(TIMESTAMP "2123-01-02 04:05:06+00" AS TIMESTAMP(9)) AS t9,
  CAST(TIMESTAMP "2123-01-02 04:05:06.123456+00" AS TIMESTAMP(12)) AS t12;

[SQLBUILDER_TARGET_SYNTAX_MODE pipe]
[SQLBUILDER_OUTPUT]
SELECT
  CAST(TIMESTAMP "2123-01-02 04:05:06+00" AS TIMESTAMP(0)) AS t0,
  CAST(TIMESTAMP "2123-01-02 04:05:06+00" AS TIMESTAMP(3)) AS t3,
  CAST(TIMESTAMP "2123-01-02 04:05:06.123+00" AS TIMESTAMP(6)) AS t6,
  CAST(TIMESTAMP "2123-01-02 04:05:06+00" AS TIMESTAMP(9)) AS t9,
  CAST(TIMESTAMP "2123-01-02 04:05:06.123456+00" AS TIMESTAMP(12)) AS t12;
==

# Timestamp literal precision with trailing zeros.
SELECT
  TIMESTAMP '2123-01-02 04:05:06.000+00' AS t3,
  TIMESTAMP '2123-01-02 04:05:06.123000+00' AS t6,
  TIMESTAMP '2123-01-02 04:05:06.00000000+00' AS t9,
  TIMESTAMP '2123-01-02 04:05:06.123456000000+00' AS t12
--
QueryStmt
+-output_column_list=
| +-$query.t3#1{TimestampPrecision:3} AS t3 [TIMESTAMP]
| +-$query.t6#2{TimestampPrecision:6} AS t6 [TIMESTAMP]
| +-$query.t9#3{TimestampPrecision:9} AS t9 [TIMESTAMP]
| +-$query.t12#4{TimestampPrecision:12} AS t12 [TIMESTAMP]
+-query=
  +-ProjectScan
    +-column_list=$query.[t3#1, t6#2, t9#3, t12#4]
    +-expr_list=
    | +-t3#1 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:3}, value=2123-01-02 04:05:06+00, has_explicit_type=TRUE)
    | +-t6#2 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:6}, value=2123-01-02 04:05:06.123+00, has_explicit_type=TRUE)
    | +-t9#3 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:9}, value=2123-01-02 04:05:06+00, has_explicit_type=TRUE)
    | +-t12#4 := Literal(type=TIMESTAMP, type_annotation_map={TimestampPrecision:12}, value=2123-01-02 04:05:06.123456+00, has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan
==

# Timestamp literal in an array.
# TODO: Support propagating timestamp precision through literal array.
SELECT [TIMESTAMP '2123-01-02 04:05:06+00']
--
QueryStmt
+-output_column_list=
| +-$query.$col1#1 AS `$col1` [ARRAY<TIMESTAMP>]
+-query=
  +-ProjectScan
    +-column_list=[$query.$col1#1]
    +-expr_list=
    | +-$col1#1 := Literal(type=ARRAY<TIMESTAMP>, value=[2123-01-02 04:05:06+00], has_explicit_type=TRUE)
    +-input_scan=
      +-SingleRowScan

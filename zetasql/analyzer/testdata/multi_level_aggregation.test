# TODO: Enable the multi-level aggregation rewrite when it is
# available.
[default language_features=V_1_4_MULTILEVEL_AGGREGATION,V_1_3_WITH_GROUP_ROWS,V_1_1_ORDER_BY_IN_AGGREGATE,V_1_1_LIMIT_IN_AGGREGATE,V_1_1_HAVING_IN_AGGREGATE,V_1_1_NULL_HANDLING_MODIFIER_IN_AGGREGATE,ANALYTIC_FUNCTIONS,V_1_3_QUALIFY,V_1_4_GROUPING_BUILTIN]
# GROUP BY modifier not supported on scalar functions.
SELECT
  ABS(ANY_VALUE(int64) GROUP BY string)
FROM SimpleTypes;
--
ERROR: GROUP BY in arguments is not supported on scalar functions [at 3:24]
  ABS(ANY_VALUE(int64) GROUP BY string)
                       ^
==

# Display appropriate error message when attempting to group by an expression
# containing GROUP BY modifiers.
SELECT
  ABS(ANY_VALUE(int64) GROUP BY string)
FROM SimpleTypes
GROUP BY 1
--
ERROR: Column 1 contains a GROUP ROWS subquery or a GROUP BY modifier, which is not allowed in GROUP BY [at 4:10]
GROUP BY 1
         ^
==

# Multi-level aggregation fails when language feature is not enabled.
[language_features=]
SELECT
  SUM(ANY_VALUE(int64) GROUP BY string)
FROM SimpleTypes;
--
ERROR: Multi-level aggregation is not yet supported. [at 2:24]
  SUM(ANY_VALUE(int64) GROUP BY string)
                       ^
==

# TODO: Re-enable this test.
# GROUP BY modifier must be specified when invoking a multi-level aggregate expr
# SELECT
#  SUM(ANY_VALUE(int64))
# FROM SimpleTypes;
# ==

# GROUP BY modifier must be a groupable type.
SELECT
  SUM(ANY_VALUE(int64) GROUP BY json)
FROM SimpleTypes;
--
ERROR: GROUP BY modifier has type JSON, which is not groupable. [at 2:33]
  SUM(ANY_VALUE(int64) GROUP BY json)
                                ^
==

# GROUP BY modifier cannot contain an aggregate expression
SELECT
  SUM(ANY_VALUE(int64) GROUP BY SUM(double))
FROM SimpleTypes;
--
ERROR: Aggregate function SUM not allowed in GROUP BY inside aggregate [at 2:33]
  SUM(ANY_VALUE(int64) GROUP BY SUM(double))
                                ^
==

# GROUP BY modifier cannot contain an aggregate expression
SELECT
  SUM(ANY_VALUE(int64) GROUP BY GROUPING(double))
FROM SimpleTypes
GROUP BY double;
--
ERROR: Aggregate function GROUPING not allowed in GROUP BY inside aggregate [at 2:33]
  SUM(ANY_VALUE(int64) GROUP BY GROUPING(double))
                                ^
==

# GROUP BY modifier cannot contain an analytic expression
SELECT
  SUM(ANY_VALUE(int64) GROUP BY SUM(double) OVER ())
FROM SimpleTypes;
--
ERROR: Analytic function not allowed in GROUP BY inside aggregate [at 2:33]
  SUM(ANY_VALUE(int64) GROUP BY SUM(double) OVER ())
                                ^
==

# GROUP BY modifier cannot contain an analytic expression
SELECT
  SUM(ANY_VALUE(int64) GROUP BY FIRST_VALUE(double) OVER ())
FROM SimpleTypes;
--
ERROR: Analytic function not allowed in GROUP BY inside aggregate [at 2:33]
  SUM(ANY_VALUE(int64) GROUP BY FIRST_VALUE(double) OVER ())
                                ^
==

# GROUP BY modifier cannot contain hints
SELECT
  SUM(ANY_VALUE(int64) GROUP @{abc=1} BY bool)
FROM SimpleTypes;
--
ERROR: Hints are not supported inside an aggregate function. [at 2:30]
  SUM(ANY_VALUE(int64) GROUP @{abc=1} BY bool)
                             ^
==

# GROUP BY modifier cannot use ordinals
SELECT
  SUM(ANY_VALUE(int64) GROUP BY 1)
FROM SimpleTypes
GROUP BY bool
--
ERROR: GROUP BY modifiers cannot specify ordinals. [at 2:33]
  SUM(ANY_VALUE(int64) GROUP BY 1)
                                ^
==

# GROUP BY modifier cannot use NULL
SELECT
  SUM(ANY_VALUE(int64) GROUP BY NULL)
FROM SimpleTypes
GROUP BY bool
--
ERROR: GROUP BY modifiers cannot be literal values. [at 2:33]
  SUM(ANY_VALUE(int64) GROUP BY NULL)
                                ^
==

# GROUP BY ALL, ROLLUP, CUBE, GROUPING SETs not supported as a GROUP BY modifier
SELECT
  SUM(ANY_VALUE(int64) GROUP BY
   {{ALL|ROLLUP(bool, double)|CUBE(bool, double)|GROUPING SETS(bool, double)}}
  )
FROM SimpleTypes;
--
ALTERNATION GROUP: ALL
--
ERROR: Syntax error: Unexpected keyword ALL [at 3:4]
   ALL
   ^
--
ALTERNATION GROUP: ROLLUP(bool, double)
--
ERROR: GROUP BY ROLLUP is not supported inside an aggregate function. [at 3:4]
   ROLLUP(bool, double)
   ^
--
ALTERNATION GROUP: CUBE(bool, double)
--
ERROR: GROUP BY CUBE is not supported inside an aggregate function. [at 3:4]
   CUBE(bool, double)
   ^
--
ALTERNATION GROUP: GROUPING SETS(bool, double)
--
ERROR: GROUP BY GROUPING SETS is not supported inside an aggregate function. [at 3:4]
   GROUPING SETS(bool, double)
   ^
==

# GROUP AND ORDER BY is only supported in pipes.
[language_features=V_1_4_MULTILEVEL_AGGREGATION,PIPES]
SELECT
  SUM(ANY_VALUE(int64) GROUP AND ORDER BY bool)
FROM SimpleTypes;
--
ERROR: GROUP AND ORDER BY is not supported outside pipe AGGREGATE. [at 2:24]
  SUM(ANY_VALUE(int64) GROUP AND ORDER BY bool)
                       ^
==

# GROUP BY can only support order specification in in pipes.
[language_features=V_1_4_MULTILEVEL_AGGREGATION,PIPES]
SELECT
  SUM(ANY_VALUE(int64) GROUP BY double ASC)
FROM SimpleTypes;
--
ERROR: GROUP BY does not support order specification outside pipe AGGREGATE [at 2:40]
  SUM(ANY_VALUE(int64) GROUP BY double ASC)
                                       ^
==

# GROUP BY modifiers cannot have aliases
[language_features=V_1_4_MULTILEVEL_AGGREGATION,PIPES]
SELECT
  SUM(ANY_VALUE(int64) GROUP BY bool AS some_alias)
FROM SimpleTypes;
--
ERROR: GROUP BY expressions in an aggregate function cannot have aliases. [at 2:38]
  SUM(ANY_VALUE(int64) GROUP BY bool AS some_alias)
                                     ^
==

# GROUP BY modifiers not supported on analytic functions.
SELECT
  SUM(ANY_VALUE(int64) GROUP BY bool) OVER ()
FROM SimpleTypes;
--
ERROR: GROUP BY modifiers not supported on analytic function calls. [at 2:3]
  SUM(ANY_VALUE(int64) GROUP BY bool) OVER ()
  ^
==

# GROUP BY modifiers not supported on analytic functions WITH GROUP ROWS
SELECT
  SUM(ANY_VALUE(X) GROUP BY bool) WITH GROUP ROWS(
    SELECT int64 AS X FROM GROUP_ROWS()
  ) OVER ()
FROM SimpleTypes;
--
ERROR: GROUP BY modifiers not supported on analytic function calls. [at 2:3]
  SUM(ANY_VALUE(X) GROUP BY bool) WITH GROUP ROWS(
  ^

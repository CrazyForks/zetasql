//
// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// LINT: LEGACY_NAMES
syntax = "proto2";

package zetasql.functions.match_recognize;

message MatchResultProto {
  // Details of each match found, including starting row, length, and pattern
  // variables matched by each row.
  repeated string match = 1;

  // When multiple consecurive AddRow() results are completely identical (
  // possible only when new_matches is empty), we store only one copy in the
  // add_row field and set rep_count to indicate how many times it repeats. This
  // is used to reduce verbosity in the expected output. When set, always >= 2.
  optional int32 rep_count = 3;
}

message MatchPartitionResultProto {
  // Results of each AddRow() call. When multiple consecutive AddRow() calls
  // return identical results, only one copy appears, with the rep_count field
  // set to indicate how many copies.
  repeated MatchResultProto add_row = 1;

  // Result of Finalize() call.
  optional MatchResultProto finalize = 2;
}
